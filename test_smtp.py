#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script de prueba para verificar configuraci√≥n SMTP
Verifica que las credenciales sean correctas antes de ejecutar el enviador principal
"""

import smtplib
import sys
from pathlib import Path

def test_smtp_connection():
    """Prueba la conexi√≥n SMTP con las credenciales configuradas"""
    
    try:
        # Importar configuraci√≥n
        config_file = Path("config_smtp.py")
        if not config_file.exists():
            print("‚ùå Error: Archivo config_smtp.py no encontrado")
            return False
        
        # Importar configuraci√≥n din√°micamente
        import importlib.util
        spec = importlib.util.spec_from_file_location("config_smtp", config_file)
        config_module = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(config_module)
        
        smtp_config = config_module.SMTP_CONFIG
        
        print("üîß Probando configuraci√≥n SMTP...")
        print(f"   Servidor: {smtp_config['server']}")
        print(f"   Puerto: {smtp_config['port']}")
        print(f"   Usuario: {smtp_config['user']}")
        print(f"   TLS: {'S√≠' if smtp_config['use_tls'] else 'No'}")
        
        # Probar conexi√≥n
        print("\nüì° Conectando al servidor SMTP...")
        server = smtplib.SMTP(smtp_config['server'], smtp_config['port'])
        
        if smtp_config['use_tls']:
            print("üîí Iniciando TLS...")
            server.starttls()
        
        print("üîê Autenticando...")
        server.login(smtp_config['user'], smtp_config['password'])
        
        print("‚úÖ ¬°Autenticaci√≥n exitosa!")
        server.quit()
        
        return True
        
    except smtplib.SMTPAuthenticationError as e:
        print(f"‚ùå Error de autenticaci√≥n: {e}")
        print("\nüí° Posibles soluciones:")
        print("   1. Verifica que la verificaci√≥n en 2 pasos est√© activada")
        print("   2. Genera una nueva contrase√±a de aplicaci√≥n")
        print("   3. Aseg√∫rate de usar la contrase√±a de aplicaci√≥n, no la normal")
        return False
        
    except smtplib.SMTPConnectError as e:
        print(f"‚ùå Error de conexi√≥n: {e}")
        print("   Verifica tu conexi√≥n a internet y la configuraci√≥n del servidor")
        return False
        
    except Exception as e:
        print(f"‚ùå Error inesperado: {e}")
        return False

def main():
    """Funci√≥n principal"""
    print("=== PRUEBA DE CONFIGURACI√ìN SMTP ===\n")
    
    success = test_smtp_connection()
    
    if success:
        print("\nüéâ ¬°Configuraci√≥n SMTP correcta!")
        print("   Puedes ejecutar enviador.py con confianza")
    else:
        print("\n‚ö†Ô∏è  Configuraci√≥n SMTP incorrecta")
        print("   Revisa config_smtp.py antes de ejecutar enviador.py")
        sys.exit(1)

if __name__ == "__main__":
    main() 